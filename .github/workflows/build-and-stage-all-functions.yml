# This workflow is used to build all functions with Gradle and publish them to dsp-artifact-registry
# For more information see: https://github.com/google-github-actions/deploy-cloud-functions

name: Build and stage all cloud functions

on:
  push

jobs:
  build-and-stage:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up AdoptOpenJDK 11
        uses: joschi/setup-jdk@v2
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Set up ADC for credentials
      # Ideally this step should be part of action.yml but
      # GHA does not yet support action within action so we're stuck.
      # Please refer to https://github.com/actions/runner/pull/612 for updates.
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.DSP_CF_STAGE_SA_EMAIL }}
          service_account_key: ${{ secrets.DSP_CF_STAGE_SA_KEY }}
          export_default_credentials: true

      # Build the Cloud Function Archive and create a Zip archive
      - name: Build Cloud Functions Archive
        id: build-cloud-functions-archive-step
        run: |
            ./gradlew shadowJar

      # Stage the Cloud Function Archive in
      - name: Stage Cloud Functions Archive in project dsp-artifact-registry under bucket cloudfunctions-dsp-artifact-registry
        id: stage-cloud-functions-archive-step
        run: |
          gsutil cp build/libs/*.jar gs://cloudfunctions-dsp-artifact-registry
