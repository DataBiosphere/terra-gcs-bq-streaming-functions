# This workflow will build a backend cloud function with Gradle
# For more information see: https://github.com/google-github-actions/deploy-cloud-functions

name: Build and deploy backend cloud function

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up AdoptOpenJDK 11
        uses: joschi/setup-jdk@v2
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Set up ADC for credentials
      # Ideally this step should be part of action.yml but
      # GHA does not yet support action within action so we're stuck.
      # Please refer to https://github.com/actions/runner/pull/612 for updates.
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.DEPLOY_CF_SA_EMAIL }}
          service_account_key: ${{ secrets.DEPLOY_CF_SA_KEY_JSON }}
          export_default_credentials: true

      - name: Create BigQuery Schemas if needed
        id: create-schemas
        uses: ./.github/actions/create-bq-schemas
        with:
          schemas_dir: schemas
          module: testrunner
          dataset: simple_stream_dataset

      # Commented out as GcsBQ is removed.
      # This step will be replaced by deploying code from central dsp-artifact-registry
      # - name: Build and deploy the backend function
      #  id: build-and-deploy
      #  uses: ./.github/actions/build-and-deploy-backend-function
      #  with:
      #    func: gcs-bq-function
      #    module: testrunner
      #    entry_point: bio.terra.cloudfunctions.streaming.GcsBQ
      #    runtime_memory: 512MB
      #    bucket: testrunner-results
      #    trigger: google.storage.object.finalize
      #    dataset: simple_stream_dataset

      - name: Build Cloud Function
        id: build-step
        run: |
          ./gradlew shadowJar

      - name: Deploy Cloud Function
        id: deploy-step
        run: |
          cat src/main/resources/testrunner/envvars.yml | \
              sed "s|_GCLOUD_PROJECT_|${{ env.GCLOUD_PROJECT }}|g" | \
              sed "s|_DATASET_|simple_stream_dataset|g" > /tmp/_envvars_.yml
          more /tmp/_envvars_.yml
          gcloud config set project ${{ env.GCLOUD_PROJECT }}
          gcloud functions deploy gcs-bq-function \
          --runtime=java11 --entry-point=bio.terra.cloudfunctions.streaming.GcsBQ \
          --memory=512MB --region=us-central1 --source=./build/libs \
          --env-vars-file=/tmp/_envvars_.yml \
          --trigger-event=google.storage.object.finalize \
          --trigger-resource=terra-kernel-k8s-testrunner-results

      - name: Build and deploy the backend function
        id: build-and-deploy
      - name: Create BigQuery Schemas
        id: create-schemas
        if: always()
        uses: ./.github/actions/create-bq-schemas
        with:
          schemas_dir: schemas
          module: testrunner
          dataset: simple_stream_dataset

      - name: Build and deploy the backend function
        id: build-and-deploy
        if: always()
        uses: ./.github/actions/build-and-deploy-backend-function
        with:
          func: gcs-bq-function
          module: testrunner
          entry_point: bio.terra.cloudfunctions.streaming.GcsBQ
          runtime_memory: 512MB
          bucket: testrunner-results
          trigger: google.storage.object.finalize
          dataset: simple_stream_dataset
